{
  package main
}

Start 
  <- _ (
       ins:Instruction Comment?      { return Forward(ins) }
     / lbl:Label                     { return Forward(lbl) }
     / comment:Comment               { return Forward(comment) }
   ) !.

Instruction 
  <- set:'!'? _ op:DatOps cd:Cond? _ rd:Reg _ ra:Reg _ rb:Reg _               { return NewRegInstr(set, op, cd, rd, ra, rb) }
   / set:'!'? _ op:DatOps cd:Cond? _ rd:Reg _ ra:Reg _ nm:Num _               { return NewI12Instr(set, op, cd, rd, ra, nm) }
   / set:'!'? _ op:DatOps cd:Cond? _ rd:Reg _ rb:Reg _                        { return NewRegInstr(set, op, cd, rd, rd, rb) }
   / set:'!'? _ op:ImmOps cd:Cond? _ rd:Reg _ nm:Num up:(_ "<<" _ "16")? _    { return NewI16Instr(set, op, cd, up, rd, nm) }
   / set:'!'? _ op:CmpOps cd:Cond? _ rd:Reg _ rb:Reg _                        { return NewRegInstr(set, op, cd, rd, rd, rb) }
   / set:'!'? _ op:CmpOps cd:Cond? _ rd:Reg _ nm:Num _                        { return NewI16Instr(set, op, cd, nil, rd, nm) }
   / set:'!'? _ op:MemOps cd:Cond? _ rd:Reg _ ra:Reg _ '[' _ rb:Reg _ ']' _   { return NewMemRegInstr(set, op, cd, rd, ra, rb) }
   / set:'!'? _ op:MemOps cd:Cond? _ rd:Reg _ ra:Reg _ '[' _ nm:Num _ ']' _   { return NewMemI12Instr(set, op, cd, rd, ra, nm) }
   /            op:BraOps cd:Cond? _ lb:Label _                               { return NewBraInstr(op, cd, lb) }

DatOps 
  <- ("add" / "sub" / "mul" / "div" / "and" / "oor" / "xor" / "nor" 
   /  "sll" / "rol" / "srl" / "sra")      { return NewString(c.text) }

 ImmOps 
   <- ("add" / "sub" / "mul" / "div" / "and" / "oor" / "xor" / "nor" / "ldc") { return NewString(c.text) }

CmpOps <- "cmp"                           { return NewString(c.text) }

MemOps <- ("ldw" / "stw")                 { return NewString(c.text) }

BraOps <- ("bra" / "brl")                 { return NewString(c.text) }

Cond <- [a-z][a-z]                        { return NewString(c.text) }

Reg <- ("sp" / "rp" / "ip" / 'r' [0-9]+)  { return NewString(c.text) }

Num <- nm:(HexNum / DecNum)               { return Forward(nm) } 

DecNum <- '-'? [0-9]+                     { return NewNum(c.text, 10) }

HexNum <- "0x" [0-9a-f]+                  { return NewNum(c.text, 16) }

Label <- '@' [a-zA-Z0-9]+                 { return NewLabel(c.text) }

Comment <- "//" [^\n\r]*                  { return NewComment() }

_ "whitespace" <- [ \n\r\t]*
